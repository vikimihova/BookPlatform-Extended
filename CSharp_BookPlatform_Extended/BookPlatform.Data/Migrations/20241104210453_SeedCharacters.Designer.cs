// <auto-generated />
using System;
using BookPlatform.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookPlatform.Data.Migrations
{
    [DbContext(typeof(PlatformDbContext))]
    [Migration("20241104210453_SeedCharacters")]
    partial class SeedCharacters
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUserApplicationUser", b =>
                {
                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FriendsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationUserId", "FriendsId");

                    b.HasIndex("FriendsId");

                    b.ToTable("ApplicationUserApplicationUser");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("First or only name of the author");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("First or only name of the author");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmittedByUser")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Last or only name of the author");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AverageRating")
                        .HasColumnType("float")
                        .HasComment("Average rating based on users' ratings");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Book description");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)")
                        .HasComment("Book cover image");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmittedByUser")
                        .HasColumnType("bit");

                    b.Property<int?>("PublicationYear")
                        .HasColumnType("int")
                        .HasComment("Official known first publication year of the book");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Full title of the book");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.BookApplicationUser", b =>
                {
                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("User's favourite character from the book - optional");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2")
                        .HasComment("Date on which the user added the book to a reading list");

                    b.Property<DateTime?>("DateFinished")
                        .HasColumnType("datetime2")
                        .HasComment("Date on which the user finished reading");

                    b.Property<DateTime?>("DateStarted")
                        .HasColumnType("datetime2")
                        .HasComment("Date on which the user started reading");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("RatingId")
                        .HasColumnType("int")
                        .HasComment("Optional user rating");

                    b.Property<int>("ReadingStatusId")
                        .HasColumnType("int")
                        .HasComment("Current reading status");

                    b.HasKey("BookId", "ApplicationUserId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("RatingId");

                    b.HasIndex("ReadingStatusId");

                    b.ToTable("BooksApplicationUsers");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.BookCharacter", b =>
                {
                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BookId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("BooksCharacters");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmittedByUser")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Full name of the character");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("38417af6-9021-4171-ad9c-bb5919a0069d"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Elizabeth Bennet"
                        },
                        new
                        {
                            Id = new Guid("13ff2d3c-8401-4cd9-b51c-149c84bd0d3b"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Lydia Bennet"
                        },
                        new
                        {
                            Id = new Guid("2ea5cbbf-b946-4f87-b5c4-2a7b1da441f2"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Kitty Bennet"
                        },
                        new
                        {
                            Id = new Guid("da2b1f1c-dc8d-4d81-a664-f1a21550ee24"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Jane Bennet"
                        },
                        new
                        {
                            Id = new Guid("2b792faf-0d50-4b5f-9338-1cbf25f7b903"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Mary Bennet"
                        },
                        new
                        {
                            Id = new Guid("f3b028e4-bd85-4f6f-95ca-0f24805998e9"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Mr. Bennet"
                        },
                        new
                        {
                            Id = new Guid("af22a11d-ead2-49c6-b3ec-1de09bd82233"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Mrs. Bennet"
                        },
                        new
                        {
                            Id = new Guid("78689e01-7a69-4ebe-9eeb-a92cea2b33dc"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Mr. Darcy"
                        },
                        new
                        {
                            Id = new Guid("649a427c-30d5-450b-9bb6-ae82a13636fc"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Georgiana Darcy"
                        },
                        new
                        {
                            Id = new Guid("d80e48db-ff1f-4fc6-bde6-cd2391442957"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Mr. Bingley"
                        },
                        new
                        {
                            Id = new Guid("72d7e15f-dfd5-425f-bd42-23021f534ff1"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Caroline Bingley"
                        },
                        new
                        {
                            Id = new Guid("a4088316-abca-45e9-b54f-c0e529a3dd74"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Lady Catherine de Bourgh"
                        },
                        new
                        {
                            Id = new Guid("4628db53-9ea8-4bc1-b58f-da42db7bfb5d"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Charlotte Lucas"
                        },
                        new
                        {
                            Id = new Guid("0fb594e4-9666-4331-8268-52007fd0216d"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Mr. Collins"
                        },
                        new
                        {
                            Id = new Guid("36ada321-1060-4b8e-b16e-a95da878c1ca"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Tommy"
                        },
                        new
                        {
                            Id = new Guid("56406179-e1f3-44df-b26f-b2fe147da02f"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Annika"
                        },
                        new
                        {
                            Id = new Guid("4e593fc4-6761-4f81-89dc-11b80c00a790"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Pippi Longstocking"
                        },
                        new
                        {
                            Id = new Guid("3a46438a-5acc-42ae-a76c-2c3a4b1a03b5"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Frodo Baggins"
                        },
                        new
                        {
                            Id = new Guid("46f0b98a-e92b-4bde-9cee-420fde2da519"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Samwise Gamgee"
                        },
                        new
                        {
                            Id = new Guid("0ac0e9bc-a2ec-4c5f-ab30-38d060749e19"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Peregrine Took"
                        },
                        new
                        {
                            Id = new Guid("2383ae23-f98c-45ae-bdba-bf7a16a2c947"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Meriadoc Brandybuck"
                        },
                        new
                        {
                            Id = new Guid("c8947e19-a5a4-4f00-852e-2056dce11602"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Gandalf"
                        },
                        new
                        {
                            Id = new Guid("b99ea61b-d7c7-4785-ba2a-a61e9789b5bf"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Aragorn"
                        },
                        new
                        {
                            Id = new Guid("ae1db45b-0ad7-49d2-b031-f55b01de6b3d"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Gimli"
                        },
                        new
                        {
                            Id = new Guid("7113d840-3804-4d6f-91e0-3c28cc3bc9a0"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Legolas"
                        },
                        new
                        {
                            Id = new Guid("966319c0-4992-4915-9a54-5eef45500ecb"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Boromir"
                        },
                        new
                        {
                            Id = new Guid("6115e4ae-078c-4a36-9fda-e1321c4191f8"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Elrond"
                        },
                        new
                        {
                            Id = new Guid("7bbc7bc4-1ae4-4188-8e7e-5a766e205ed4"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Arwen"
                        },
                        new
                        {
                            Id = new Guid("e4b530d2-5b60-4749-96f7-fbff38341cd2"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Saruman"
                        },
                        new
                        {
                            Id = new Guid("2da6a488-dbdb-486f-9aba-1aeb989030f1"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Sauron"
                        },
                        new
                        {
                            Id = new Guid("b0ec2257-6cc4-4361-9129-a38d3b434fa5"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Golum"
                        },
                        new
                        {
                            Id = new Guid("2608b54a-a09b-430b-8393-030656e99e1b"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Bilbo Baggins"
                        },
                        new
                        {
                            Id = new Guid("a74939c2-0aae-4615-a0ff-45b5c1312fda"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Galadriel"
                        },
                        new
                        {
                            Id = new Guid("ed7b5205-6fe8-423a-81ef-24be8ba1fe2d"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Eowyn"
                        },
                        new
                        {
                            Id = new Guid("7394b47c-8d6b-40d3-8636-de4b9824ecb1"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Faramir"
                        },
                        new
                        {
                            Id = new Guid("44f79007-7def-481c-962a-b4cc801b2ab5"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Harry Potter"
                        },
                        new
                        {
                            Id = new Guid("056664f2-dbbe-4a94-84bb-6e6ab022889a"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Ron Weasley"
                        },
                        new
                        {
                            Id = new Guid("a82aeaa6-b9e9-43dd-81d5-a3754c71d91d"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Hermione Granger"
                        },
                        new
                        {
                            Id = new Guid("9b4b8256-27c4-4a0b-b7d2-7deeef3777fd"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Neville Longbottom"
                        },
                        new
                        {
                            Id = new Guid("965224f8-ecf3-4bca-9677-bea52fc63ea7"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Albus Dumbledore"
                        },
                        new
                        {
                            Id = new Guid("d7c7d8af-4c25-4b7a-b707-5197dad1d4dc"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Hagrid"
                        },
                        new
                        {
                            Id = new Guid("d4b1fa4f-a4dc-4383-b8da-ec1c372fdfa3"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Minerva McGonagall"
                        },
                        new
                        {
                            Id = new Guid("2ebd41f9-8e1b-4410-b413-453b8f8752f1"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Severus Snape"
                        },
                        new
                        {
                            Id = new Guid("916bd001-ca7b-4a63-9d8c-49cfd5275052"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Draco Malfoy"
                        },
                        new
                        {
                            Id = new Guid("b5ae61a2-3372-4864-94bc-2741ab68044a"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Lord Voldemort"
                        },
                        new
                        {
                            Id = new Guid("b70f6a7c-83c1-426b-9df3-9bafc80471e4"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Ginny Weasley"
                        },
                        new
                        {
                            Id = new Guid("34a8dbd1-ceba-4182-818f-28bc6258fe43"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Molly Weasley"
                        },
                        new
                        {
                            Id = new Guid("3a45fd62-4586-4538-b2e6-898b85e7367d"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Arthur Weasley"
                        },
                        new
                        {
                            Id = new Guid("5dc645bd-5017-4673-84d9-1376e5971316"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Percy Weasley"
                        },
                        new
                        {
                            Id = new Guid("83910c4c-423c-4465-ab3a-fc220cd9e262"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Fred Weasley"
                        },
                        new
                        {
                            Id = new Guid("06b295dd-5dd2-47ee-a528-56a370c5c493"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "George Weasley"
                        },
                        new
                        {
                            Id = new Guid("3014036d-5440-42af-9c0c-bf4f0e7df5f2"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Dudley Dursley"
                        },
                        new
                        {
                            Id = new Guid("8034f165-229c-49a2-92aa-82545bfc1302"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Aunt Petunia"
                        },
                        new
                        {
                            Id = new Guid("b8ce7f8f-2530-4e3e-8eab-3e28d4d34d2b"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Uncle Vernon"
                        },
                        new
                        {
                            Id = new Guid("9d3bbb36-786c-4197-bf7f-bd4e296940ae"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Oliver Wood"
                        },
                        new
                        {
                            Id = new Guid("193f1aa1-259b-4b58-8e88-76f7d222bcc1"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Quirinus Quirrell"
                        },
                        new
                        {
                            Id = new Guid("54a8c162-c190-4f03-b704-d04160622ce2"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Garrick Ollivander"
                        },
                        new
                        {
                            Id = new Guid("503a8548-2834-41b5-bfd9-31d5c7d2fe2a"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Argus Filch"
                        },
                        new
                        {
                            Id = new Guid("4633a0ed-87e2-4e5e-b506-15c897db36d0"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Gilderoy Lockhart"
                        },
                        new
                        {
                            Id = new Guid("e55d3eb6-f95b-4e48-a1fd-4f9a871d61d2"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Colin Creevey"
                        },
                        new
                        {
                            Id = new Guid("320ffbd1-a238-4b68-9d3d-f76254b05f62"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Lucius Malfoy"
                        },
                        new
                        {
                            Id = new Guid("34731f81-fc54-4076-8ed6-c8c1a5277642"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Dobby"
                        },
                        new
                        {
                            Id = new Guid("84e848cb-6877-47ab-9951-ce2115b34726"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Sirius Black"
                        },
                        new
                        {
                            Id = new Guid("af8dd6e7-4ee3-4565-b432-7e48caaa8226"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Remus Lupin"
                        },
                        new
                        {
                            Id = new Guid("96597e0d-a1ab-43a8-abfd-d2492c1633a5"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Peter Pettigrew"
                        },
                        new
                        {
                            Id = new Guid("ebb7e1f4-a3fb-4cc6-92bd-56a76859e797"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Sybil Trelawney"
                        },
                        new
                        {
                            Id = new Guid("16156c64-06be-4320-845c-589f4215fa23"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Buckbeak"
                        },
                        new
                        {
                            Id = new Guid("a7d5b484-5e01-4bdd-ae65-cefd41ec1851"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Stan Shunpike"
                        },
                        new
                        {
                            Id = new Guid("0ed4d9f6-932a-46cb-81d7-94dc7a662d80"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Cornelius Fudge"
                        },
                        new
                        {
                            Id = new Guid("15390858-aa8d-4dc4-b3ef-80379bfd86ac"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Cho Chang"
                        },
                        new
                        {
                            Id = new Guid("61370023-3d73-4a8e-a88b-d42f9d311df0"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Bartemius Crouch"
                        },
                        new
                        {
                            Id = new Guid("aaa8f5be-84e8-4b70-8034-1d22c54acdcb"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Bartemius Crouch, Jr."
                        },
                        new
                        {
                            Id = new Guid("e1dfe43a-4102-4f35-99b3-932a1d5c9f8a"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Alastor Moody"
                        },
                        new
                        {
                            Id = new Guid("5a0fafa4-d3dd-44fe-91d3-b4959d03429b"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Rita Skeeter"
                        },
                        new
                        {
                            Id = new Guid("a382b48f-cb87-4a77-83e6-31450b2d5ed0"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Charlie Weasley"
                        },
                        new
                        {
                            Id = new Guid("868d163c-2211-402d-bd11-581fb6838f19"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Bill Weasley"
                        },
                        new
                        {
                            Id = new Guid("d9f1f065-1b40-44bc-889b-2073571c6098"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Viktor Krum"
                        },
                        new
                        {
                            Id = new Guid("3902ffec-ba82-4ec5-b622-bf7669e161a4"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Fleur Delacour"
                        },
                        new
                        {
                            Id = new Guid("847940bf-9666-42b0-be19-bf7dfead1ded"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Cedric Diggory"
                        },
                        new
                        {
                            Id = new Guid("f78c4263-d5cd-4dcf-a2ab-91b412698b42"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Bellatrix Lestrange"
                        },
                        new
                        {
                            Id = new Guid("6eb7874e-48bc-443f-9a1f-5550c226300b"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Igor Karkaroff"
                        },
                        new
                        {
                            Id = new Guid("f58488c4-32ab-4f8f-b2c8-8fbed256493a"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Olympe Maxime"
                        },
                        new
                        {
                            Id = new Guid("6c434134-2395-4e7a-97f1-cec64b4feac9"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Luna Lovegood"
                        },
                        new
                        {
                            Id = new Guid("9c228b07-50d8-45bd-8866-56b5fce02f78"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Nymphadora Tonks"
                        },
                        new
                        {
                            Id = new Guid("00c4832a-7ddb-4464-b10e-9f98a6d3a590"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Dolores Umbridge"
                        },
                        new
                        {
                            Id = new Guid("f128e7ea-597f-49ed-8e7f-e62ee8fe5cbd"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Kreacher"
                        },
                        new
                        {
                            Id = new Guid("766651f7-6dba-4060-bf93-2f93c25a0e0e"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Kingsley Shacklebolt"
                        },
                        new
                        {
                            Id = new Guid("0edaf975-a570-4c63-836b-c133c9ae6f31"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Horace Slughorn"
                        },
                        new
                        {
                            Id = new Guid("106e8631-1838-4907-802c-767b9b97c35c"),
                            IsDeleted = false,
                            IsSubmittedByUser = false,
                            Name = "Narcissa Malfoy"
                        });
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("Name of the genre");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Quote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The book the quote is from");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)")
                        .HasComment("The body of the quote");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasComment("Date of creation in the database");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.QuoteApplicationUser", b =>
                {
                    b.Property<Guid>("QuoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("QuoteId", "ApplicationUserId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("QuotesApplicationUsers");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key and numeric value of the rating");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RatingDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Descriptive value of the rating");

                    b.HasKey("Id");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RatingDescription = "Barely finished it, if at all"
                        },
                        new
                        {
                            Id = 2,
                            RatingDescription = "Not much to enjoy/ learn"
                        },
                        new
                        {
                            Id = 3,
                            RatingDescription = "Good parts are good, bad parts are bad"
                        },
                        new
                        {
                            Id = 4,
                            RatingDescription = "Would definitely recommend/ reread"
                        },
                        new
                        {
                            Id = 5,
                            RatingDescription = "Absolutely amazing"
                        });
                });

            modelBuilder.Entity("BookPlatform.Data.Models.ReadingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key and numeric value of the status");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Descriptive value of the status");

                    b.HasKey("Id");

                    b.ToTable("ReadingStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusDescription = "Read"
                        },
                        new
                        {
                            Id = 2,
                            StatusDescription = "Currently Reading"
                        },
                        new
                        {
                            Id = 3,
                            StatusDescription = "Want to Read"
                        });
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The user who created the review");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("The book the review is about");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The body of the review");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasComment("Date of creation in the database");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Likes")
                        .HasColumnType("int")
                        .HasComment("Number of likes");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasComment("Date of last modification in the database");

                    b.HasKey("Id");

                    b.HasIndex("BookId", "ApplicationUserId")
                        .IsUnique();

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ApplicationUserApplicationUser", b =>
                {
                    b.HasOne("BookPlatform.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookPlatform.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("FriendsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Book", b =>
                {
                    b.HasOne("BookPlatform.Data.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookPlatform.Data.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.BookApplicationUser", b =>
                {
                    b.HasOne("BookPlatform.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("UserBooks")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookPlatform.Data.Models.Book", "Book")
                        .WithMany("BookApplicationUsers")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookPlatform.Data.Models.Character", "Character")
                        .WithMany("CharacterBookApplicationUsers")
                        .HasForeignKey("CharacterId");

                    b.HasOne("BookPlatform.Data.Models.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId");

                    b.HasOne("BookPlatform.Data.Models.ReadingStatus", "ReadingStatus")
                        .WithMany()
                        .HasForeignKey("ReadingStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Book");

                    b.Navigation("Character");

                    b.Navigation("Rating");

                    b.Navigation("ReadingStatus");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.BookCharacter", b =>
                {
                    b.HasOne("BookPlatform.Data.Models.Book", "Book")
                        .WithMany("BookCharacters")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookPlatform.Data.Models.Character", "Character")
                        .WithMany("CharacterBooks")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Quote", b =>
                {
                    b.HasOne("BookPlatform.Data.Models.Book", "Book")
                        .WithMany("Quotes")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.QuoteApplicationUser", b =>
                {
                    b.HasOne("BookPlatform.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("UserQuotes")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookPlatform.Data.Models.Quote", "Quote")
                        .WithMany("QuoteApplicationUsers")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Review", b =>
                {
                    b.HasOne("BookPlatform.Data.Models.BookApplicationUser", "BookApplicationUser")
                        .WithOne("Review")
                        .HasForeignKey("BookPlatform.Data.Models.Review", "BookId", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("BookPlatform.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("BookPlatform.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookPlatform.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("BookPlatform.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookPlatform.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("UserBooks");

                    b.Navigation("UserQuotes");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Book", b =>
                {
                    b.Navigation("BookApplicationUsers");

                    b.Navigation("BookCharacters");

                    b.Navigation("Quotes");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.BookApplicationUser", b =>
                {
                    b.Navigation("Review");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Character", b =>
                {
                    b.Navigation("CharacterBookApplicationUsers");

                    b.Navigation("CharacterBooks");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Genre", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookPlatform.Data.Models.Quote", b =>
                {
                    b.Navigation("QuoteApplicationUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
